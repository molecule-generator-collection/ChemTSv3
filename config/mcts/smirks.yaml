output_dir: generation_result
time_limit: 36000
# max_generations: 200000
node_class: CanonicalSMILESStringNode
use_canonical_smiles_as_key: true
root: "O[C@H](c1csc2ncncc12)/c1nc(C(=O)[O-])nc(N)n1"
# root: "O[C@@H](c1cc(C(=O)[O-])cc2cncnc12)C(=O)C1=COCC(O)=CCO1"
# root: C
# root: c1ccccc1
# root: c1cccc2cncnc12

transition_class: SMIRKSTransition
transition_args:
  smirks_path:  data/smirks/jensen.txt
  filters:
  - filter_class: ValidityFilter
  - filter_class: AtomCountFilter
  - filter_class: MaxRingSizeFilter
  - filter_class: RingBondFilter
  - filter_class: RadicalFilter
  - filter_class: ChargeFilter

reward_class: JScoreReward

policy_class: PUCT
policy_args:
  c: 0.25
  best_rate: 0.9

generator_class: MCTS
generator_args:
  avoid_duplicates: true
  n_eval_iters: 1
  n_tries: 1
  filter_reward: ignore
  info_interval: 100

plot_args:
  reward_top_ps: [0.5, 0.1]