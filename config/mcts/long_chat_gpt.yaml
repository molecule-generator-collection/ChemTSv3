output_dir: generation_result
time_limit: 1800 # seconds
max_generations: 50
debug: true

node_class: SMILESStringNode
root: "c1ccccc1"

transition_class: LongChatGPTTransition
transition_args:
  api_key_path: data/personal/api_key.txt
  model: gpt-5-mini
  n_samples: 1
  prompt:
    - "Transform the given molecule to improve its drug-likeness while preserving the core scaffold. Starting molecule: ###SMILES###."
    - "Transform the given molecule to improve its drug-likeness by appending a single fragment. Starting molecule: ###SMILES###"
    - "Transform the given molecule to improve its drug-likeness by replacing one fragment. Starting molecule: ###SMILES###"
  initial_prompt: "Your ultimate goal is to generate molecules that maximize the reward by iteratively transforming the given ones. All molecules are provided in SMILES format, and your response must return the result strictly as a SMILES string. Do not include any additional text or explanation."

reward_class: TDCReward
reward_args:
  objective: qed

policy_class: UCT
policy_args:
  best_rate: 0.5
  c: 0.05

generator_class: MCTS
generator_args:
  eval_width: .inf
  n_evals: 1
  filter_reward: 0
  cut_terminal: true
  avoid_duplicates: true
  cut_failed_child: true
  info_interval: 1

plot_args:
  reward_top_ps: [0.5, 0.1]

filters:
  - filter_class: ValidityFilter # put this first if unsure