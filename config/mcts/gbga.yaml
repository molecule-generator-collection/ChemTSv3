output_dir: generation_result
time_limit: 1000
max_generations: 1000
node_class: CanonicalSMILESStringNode
# root: "O[C@H](c1csc2ncncc12)/c1nc(C(=O)[O-])nc(N)n1"
# root: "O[C@@H](c1cc(C(=O)[O-])cc2cncnc12)C(=O)C1=COCC(O)=CCO1"
# root: C
root: c1ccccc1
# root: O=C1C(CBr)S(=O)[C@H](Cl)N1

reward_class: GuacaMolReward
reward_args:
  objective: isomers_c7h8n2o2

transition_class: GBGATransition
transition_args:
  check_size: false
  check_ring: true
  filters:
    - filter_class: ValidityFilter
    - filter_class: RadicalFilter
    - filter_class: ChargeFilter

policy_class: PUCT
policy_args:
  c: 0.25
  best_rate: 0.9

generator_class: MCTS
generator_args:
  n_eval_iters: 1
  n_tries: 1
  filter_reward: -1
  avoid_duplicates: true
  info_interval: 100

plot_args:
  reward_top_ps: [0.5, 0.1]

filters: